[Config]
Version = 3
MaxMemoryRegions = 74
UnusableDDRMemoryAtBeginning = 1
UnusableDDRMemoryStartAddr = 0x80000000
UnusableDDRMemorySizeAtBeginning = 0x600000

[MemoryMap]
#                                                    EFI_RESOURCE_ EFI_RESOURCE_ATTRIBUTE_ EFI_MEMORY_TYPE ARM_REGION_ATTRIBUTE_
#MemBase,   MemSize,   MemLabel(32 Char.), BuildHob, ResourceType, ResourceAttribute, MemoryType, CacheAttributes
#--------------------- DDR  -----
0x80000000, 0x00600000, "HYP",               AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0x80600000, 0x00200000, "BOOT",              AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x80800000, 0x00060000, "AOP CMD",           AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80860000, 0x00020000, "AOP CMD DB",        AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80880000, 0x00004000, "Reserved",          AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80884000, 0x00010000, "XBL Log Buffer",    AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0x80894000, 0x00010000, "GPU PRR",           AddMem, MEM_RES, WRITE_COMBINEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80895000, 0x0000F000, "HLOS1",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x808A4000, 0x00010000, "TPMControl",        AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x808B4000, 0x0004B000, "HLOS2",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x808FF000, 0x00001000, "APSS",              AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x80900000, 0x00200000, "SMEM",              AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x80B00000, 0x00100000, "CPUCP",             AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x80C00000, 0x00C00000, "WLAN FW",           AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x81800000, 0x00F00000, "LPASS_ML",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x82700000, 0x00010000, "CDSP Secure Heap",  AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0x82710000, 0x00800000, "Sched Heap",        AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x82F10000, 0x013F0000, "HLOS3",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x84300000, 0x17A00000, "PIL Reserved",      AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0x9BD00000, 0x03300000, "DXE Heap",          AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x9F000000, 0x00500000, "UEFI FD",           AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK
0x9F500000, 0x0008C000, "SEC Heap",          AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9F58C000, 0x00001000, "CPU Vectors",       AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK
0x9F58D000, 0x00003000, "MMU PageTables",    AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9F590000, 0x00067000, "UEFI Stack",        AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0x9F5F7000, 0x00008000, "Log Buffer",        AddMem, SYS_MEM, SYS_MEM_CAP, RtData, WRITE_BACK_XN
0x9F5FF000, 0x00001000, "Info Blk",          AddMem, SYS_MEM, SYS_MEM_CAP, RtData, WRITE_BACK_XN
0x9F600000, 0x00900000, "HLOS4",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0x9FF00000, 0x00100000, "FV Region",         AddMem, SYS_MEM, SYS_MEM_CAP, BsData, WRITE_BACK_XN
0xA0000000, 0x00002000, "USB UCSI Temp",     AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0xA0002000, 0x007FE000, "HLOS5",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0xA0800000, 0x00300000, "MPSS_EFS",          AddMem, SYS_MEM, SYS_MEM_CAP, Reserv, UNCACHED_UNBUFFERED_XN
0xA0B00000, 0x1AB00000, "HLOS6",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0xBB600000, 0x04A00000, "HYP RESERVED",      AddDynamicMem,   SYS_MEM, SYS_MEM_CAP, Reserv, WRITE_BACK_XN
0xC0100000, 0x01200000, "TAGS",              NoHob,  SYS_MEM, SYS_MEM_CAP, Reserv, NS_DEVICE
0xC1300000, 0x00500000, "QTEE",              NoHob,  SYS_MEM, SYS_MEM_CAP, Reserv, NS_DEVICE
0xC1800000, 0x02200000, "TZApps",            NoHob,  SYS_MEM, SYS_MEM_CAP, Reserv, NS_DEVICE
0xC3A00000, 0x01700000, "APSS Ext",          AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0xC5100000, 0x00F00000, "DBI Dump",          NoHob,  MMAP_IO, INITIALIZED, Conv,   UNCACHED_UNBUFFERED_XN
0xC6000000, 0x00500000, "HLOS7",             AddMem, SYS_MEM, SYS_MEM_CAP, Conv,   WRITE_BACK_XN
0xC6500000, 0x00800000, "ADSP RPC",          AddMem, MEM_RES, UNCACHEABLE, Reserv, UNCACHED_UNBUFFERED_XN
0xC6D00000, 0x01000000, "Display Reserved",  AddMem, MEM_RES, SYS_MEM_CAP, Reserv, WRITE_THROUGH_XN

[RegisterMap]
#--------------------- Other -----
0x14680000, 0x0002B000, "IMEM Base",          NoHob,  MMAP_IO, INITIALIZED, Conv,   NS_DEVICE
0x146AA000, 0x00001000, "IMEM Cookie Base",   AddDev, MMAP_IO, INITIALIZED, Conv,   NS_DEVICE
#--------------------- Register --
0x00400000, 0x00100000, "IPC_ROUTER_TOP",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x00780000, 0x00010000, "SECURITY CONTROL",   AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x00900000, 0x00200000, "QUP",                AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x010D0000, 0x00010000, "PRNG_CFG_PRNG",      AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x01DC0000, 0x00040000, "CRYPTO0 CRYPTO",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x01FC0000, 0x00030000, "TCSR_TCSR_REGS",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x007C0000, 0x00100000, "PERIPH_SS_SDC1",     AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x08800000, 0x00500000, "PERIPH_SS",          AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0A600000, 0x00400000, "USB",                AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0B000000, 0x04000000, "AOSS",               AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x0F100000, 0x00300000, "TLMM",               AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x15000000, 0x00200000, "SMMU",               AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x17800000, 0x00E00000, "APSS_HM",            AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x40000000, 0x02000000, "PCIE_1_AXI",         AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE
0x01C08000, 0x00008000, "PCIE_1_AHB",         AddDev, MMAP_IO, UNCACHEABLE, MmIO,   NS_DEVICE


[ConfigParameters]
# Update count if more than default 30 entries #
ConfigParameterCount = 64

## UEFI CORE ##
PlatConfigFileName = "uefiplatWP.cfg"
OsTypeString = "WP"
NumCpusFuseAddr = 0x5C04C

# Force booting to shell whilst in pre-silicon phase
EnableShell = 0x1

# Tune based on heap needs for Initial tables, FV decompression and MMU tables through Dxe/BDS
InitialPagePoolCount = 0xF70

## Shared IMEM (Cookies, Offsets)
SharedIMEMBaseAddr    = 0x146AA000

DloadCookieAddr = 0x01FD3000
# for full dump 0x10, for minidump 0x20
DloadCookieValue = 0x10

MemoryCaptureModeOffset = 0x1C
AbnormalResetOccurredOffset = 0x24

## MPPark ##
## NumCpus - max number of cores
## NumActiveCores - number of cores used
NumCpus = 8
NumActiveCores = 8

## ULogFile ##
SpecialLogPartition = "LOGFS:\"
MaxLogFileSize = 0x400000

# UEFI memory use #
UefiMemUseThreshold = 0xD8

## USB ##
USBHS1_Config = 0x0
UsbFnIoRevNum = 0x00010001

## Buttons / KeyPad ##
PwrBtnShutdownFlag = 0x0

## SDCC ##
Sdc1GpioConfigOn = 0x1E92
Sdc2GpioConfigOn = 0x1E92
Sdc1GpioConfigOff = 0xA00
Sdc2GpioConfigOff = 0xA00

## SDHC Mode 0:Legacy Mode, Non-zero: SDHC Mode ##
EnableSDHCSwitch = 0x1

## UFS ##
EnableUfsIOC = 1
UfsSmmuConfigForOtherBootDev = 1

## NVME ##
NvmePowerOn = 0

## PCIE ##
#PCIeRPNumber BIT 7:0  -> number of RPs to be enabled
#PCIeRPNumber BIT 15:8 -> BIT mask to identify which RPs are enabled
#Eg. value: 0x0502     -> Total two numbers of RPs, RP0 and RP2 are enabled
#Total RPs supported 8 numbers and bits allocated are 16 bits

#PCIeRPNumber=0x0101

## TZ DIAG Offset and Size ##
TzDiagOffset = 0x720
TzDiagSize = 0x2000

## Security flag ##
SecurityFlag = 0x477
# SecBootEnableFlag         = 0x1       i.e. 0b00000001
# TreeTpmEnableFlag         = 0x2       i.e. 0b00000010
# CommonMbnLoadFlag         = 0x4       i.e. 0b00000100
# VariableServicesFlag      = 0x10      i.e. 0b00010000
# WinsecappFlag             = 0x20      i.e. 0b00100000
# LoadSecAppFlag            = 0x40      i.e. 0b01000000
# LoadKeymasterFlag         = 0x80      i.e. 0b10000000
# EnableQseeLogsFlag        = 0x100     i.e. 0b00000001 00000000
# EnableTzDiagLogsFlag      = 0x200     i.e. 0b00000010 00000000
# MSSecappFlag              = 0x400     i.e. 0b00000100 00000000
# EnableTcgDxeFlag          = 0x800     i.e. 0b00001000 00000000
# EnableSecurityStubDxeFlag = 0x1000    i.e. 0b00010000 00000000
# EnableMeasureBootEventLog = 0x2000    i.e. 0b00100000 00000000

## Default app to boot in platform BDS init
DefaultChargerApp = "QcomChargerApp"

## Enable HotKey detection in RETAIL devices
DetectRetailUserAttentionHotkey = 0x00
## 0x17 is SCAN_ESC
DetectRetailUserAttentionHotkeyCode = 0x17
## Enable OEM Setup App launch in Retail ##
EnableOEMSetupAppInRetail = 0x0

## LogFs partition ##
## NOTE: Ensure logs 8MB bin is flashed from /Tools/binaries ##
EnableLogFsSyncInRetail = 0x0

## ShmBridge Memory Size
ShmBridgememSize = 0xA00000

#
#  Multithreading options
#
EnableMultiThreading = 1
MaxCoreCnt = 8
# Keep the following number of cores active, including the boot core
EarlyInitCoreCnt = 2

## Get TZ App Logs ##
EnableUefiSecAppDebugLogDump = 0x0

## Allow Non Persistent Varialbes in Retail ##
## NOTE: Recommend disabling feature for Retail devices
AllowNonPersistentVarsInRetail = 0x1

# Initialize Display panel in its own thread to run in parallel to booting
EnableDisplayThread = 0x0

# Using imagefv to load display logo
EnableDisplayImageFv = 0x0

## Dynamic UART Log Buffer Size
#Refer to boot_images/QcomPkg/Docs/UefiLogBufferSizeConfigReadme.txt for usage.
#UARTLogBufferSize = 0x19000

#DDRInfoDxe EnvDxe event callback flag
DDRInfoNotifyFlag = 0x0

#  FV Decompression on multicore option
EnableMultiCoreFvDecompression = 0

#  Disable SetupSubSysCrashHandler if not supported/ not applicable
DisableSubSysCrshHandler = 1

## Enable/Disable Variable Policy Engine ##
EnableVariablePolicyEngine = 1

## Allow individual ACPI tables loading ## 
EnableACPIFallback = 1

## BOOLEAN ; 1 - To skip UEFI variable locking. By default it is set to 0 from dxe to lock.
EnterpriseMgtSkipVariableLocking = 1

## NOTE: Do not remove last newline, required by parser ##

